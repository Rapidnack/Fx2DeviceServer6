<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.13'?>
<flow_graph>
  <timestamp>Thu May 14 10:45:27 2020</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value></value>
    </param>
    <param>
      <key>category</key>
      <value>[GRC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>qt_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>top_block</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>sizing_mode</key>
      <value>fixed</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
    <param>
      <key>placement</key>
      <value>(0,0)</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_range</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>8</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(480, 12)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>cic_gain</value>
    </param>
    <param>
      <key>label</key>
      <value>CIC GAIN</value>
    </param>
    <param>
      <key>min_len</key>
      <value>200</value>
    </param>
    <param>
      <key>orient</key>
      <value>Qt.Horizontal</value>
    </param>
    <param>
      <key>start</key>
      <value>0</value>
    </param>
    <param>
      <key>step</key>
      <value>1</value>
    </param>
    <param>
      <key>stop</key>
      <value>16</value>
    </param>
    <param>
      <key>rangeType</key>
      <value>int</value>
    </param>
    <param>
      <key>widget</key>
      <value>counter_slider</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(408, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>cic_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>3</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_range</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>10e3</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(288, 12)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>freq</value>
    </param>
    <param>
      <key>label</key>
      <value>FREQ</value>
    </param>
    <param>
      <key>min_len</key>
      <value>200</value>
    </param>
    <param>
      <key>orient</key>
      <value>Qt.Horizontal</value>
    </param>
    <param>
      <key>start</key>
      <value>0</value>
    </param>
    <param>
      <key>step</key>
      <value>10e3</value>
    </param>
    <param>
      <key>stop</key>
      <value>96e6</value>
    </param>
    <param>
      <key>rangeType</key>
      <value>float</value>
    </param>
    <param>
      <key>widget</key>
      <value>counter_slider</value>
    </param>
  </block>
  <block>
    <key>variable_qtgui_range</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>0</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(184, 12)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>led</value>
    </param>
    <param>
      <key>label</key>
      <value>LED</value>
    </param>
    <param>
      <key>min_len</key>
      <value>200</value>
    </param>
    <param>
      <key>orient</key>
      <value>Qt.Horizontal</value>
    </param>
    <param>
      <key>start</key>
      <value>0</value>
    </param>
    <param>
      <key>step</key>
      <value>1</value>
    </param>
    <param>
      <key>stop</key>
      <value>255</value>
    </param>
    <param>
      <key>rangeType</key>
      <value>int</value>
    </param>
    <param>
      <key>widget</key>
      <value>counter_slider</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 76)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>37500 &lt;&lt; cic_rate</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>address</key>
      <value>'127.0.0.1'</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('ADC_SA_SDR', 'blk', [('address', "'127.0.0.1'"), ('port', '53006'), ('led', '0'), ('frequency', '1000.0'), ('cic_rate', '3'), ('cic_gain', '8')], [], [], 'Embedded Python Block example - ADC_SA_SDR', ['cic_gain', 'cic_rate', 'frequency', 'led'])</value>
    </param>
    <param>
      <key>cic_gain</key>
      <value>cic_gain</value>
    </param>
    <param>
      <key>cic_rate</key>
      <value>cic_rate</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>import numpy as np
from gnuradio import gr
import socket

class blk(gr.basic_block):
    """Embedded Python Block example - ADC_SA_SDR"""

    def __init__(self, address='127.0.0.1', port=53006, led=0, frequency=1e3, cic_rate=3, cic_gain=8):
        gr.basic_block.__init__(
            self,
            name='ADC_SA_SDR',
            in_sig=None,
            out_sig=None
        )
        self._address = address
        self._port = port
        self._led = led
        self._frequency = frequency
        self._cic_rate = cic_rate
        self._cic_gain = cic_gain

        try:
            self._connect()
            self._send_led()
            self._send_frequency()
            self._send_cic_rate()
            self._send_cic_gain()
        except:
            pass

    def _connect(self):
        print('connecting to %s:%d' % (self._address, self._port))
        self._client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self._client.connect((self._address, self._port))
        self._stream = self._client.makefile(mode='rw')

    def _send_led(self):
        try:
            self._stream.write('*W32:0x%x 0x%x\n' % (0x0, int(self._led)))
            self._stream.flush()
        except:
            self._connect()
            self._stream.write('*W32:0x%x 0x%x\n' % (0x0, int(self._led)))
            self._stream.flush()

    def _freq_to_ddc(self, clk, freq):
        clkDiv2 = clk / 2.0
        bank = np.floor(freq / clkDiv2)
        lo = freq - clkDiv2 * bank
        if (bank % 2) == 1:
            lo = clkDiv2 - lo
        return lo

    def _freq_to_phase_inc(self, clk, freq):
        phaseInc360 = 0x80000000 * 2.0
        return int(phaseInc360 * (self._freq_to_ddc(clk, freq) / clk))

    def _send_frequency(self):
        clk = 48000000
        phaseInc = self._freq_to_phase_inc(clk, self._frequency)
        clkDiv2 = clk / 2.0
        bank = np.floor(self._frequency / clkDiv2)
        iq_swap = int(bank % 2)
        try:
            self._stream.write('*W32:0x%x 0x%x\n' % (0x10, phaseInc))
            self._stream.write('*W32:0x%x %d\n' % (0x20, iq_swap))
            self._stream.flush()
        except:
            self._connect()
            self._stream.write('*W32:0x%x 0x%x\n' % (0x10, phaseInc))
            self._stream.write('*W32:0x%x %d\n' % (0x20, iq_swap))
            self._stream.flush()

    def _send_cic_rate(self):
        try:
            self._stream.write('*W32:0x%x %d\n' % (0x30, int(self._cic_rate)))
            self._stream.flush()
        except:
            self._connect()
            self._stream.write('*W32:0x%x %d\n' % (0x30, int(self._cic_rate)))
            self._stream.flush()

    def _send_cic_gain(self):
        try:
            self._stream.write('*W32:0x%x %d\n' % (0x40, int(self._cic_gain)))
            self._stream.flush()
        except:
            self._connect()
            self._stream.write('*W32:0x%x %d\n' % (0x40, int(self._cic_gain)))
            self._stream.flush()

    @property
    def led(self):
        return self._led

    @led.setter
    def led(self, led):
        self._led = led
        self._send_led()

    @property
    def frequency(self):
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        self._frequency = frequency
        self._send_frequency()

    @property
    def cic_rate(self):
        return self._cic_rate

    @cic_rate.setter
    def cic_rate(self, cic_rate):
        self._cic_rate = cic_rate
        self._send_cic_rate()

    @property
    def cic_gain(self):
        return self._cic_gain

    @cic_gain.setter
    def cic_gain(self, cic_gain):
        self._cic_gain = cic_gain
        self._send_cic_gain()
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>frequency</key>
      <value>freq</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(584, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_0</value>
    </param>
    <param>
      <key>led</key>
      <value>led</value>
    </param>
    <param>
      <key>port</key>
      <value>53006</value>
    </param>
  </block>
  <block>
    <key>fx2_iq_udp_source</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 188)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fx2_iq_udp_source_0</value>
    </param>
    <param>
      <key>ipaddr</key>
      <value>'0.0.0.0'</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>port</key>
      <value>52006</value>
    </param>
  </block>
  <block>
    <key>qtgui_sink_x</key>
    <param>
      <key>bw</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>fc</key>
      <value>0</value>
    </param>
    <param>
      <key>freqchangevar</key>
      <value>None</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>fftsize</key>
      <value>1024</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(184, 172)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_sink_x_0_0_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>name</key>
      <value>""</value>
    </param>
    <param>
      <key>plotconst</key>
      <value>True</value>
    </param>
    <param>
      <key>plotfreq</key>
      <value>True</value>
    </param>
    <param>
      <key>plottime</key>
      <value>True</value>
    </param>
    <param>
      <key>plotwaterfall</key>
      <value>True</value>
    </param>
    <param>
      <key>showports</key>
      <value>True</value>
    </param>
    <param>
      <key>showrf</key>
      <value>False</value>
    </param>
    <param>
      <key>type</key>
      <value>complex</value>
    </param>
    <param>
      <key>rate</key>
      <value>10</value>
    </param>
    <param>
      <key>wintype</key>
      <value>firdes.WIN_BLACKMAN_hARRIS</value>
    </param>
  </block>
  <connection>
    <source_block_id>fx2_iq_udp_source_0</source_block_id>
    <sink_block_id>qtgui_sink_x_0_0_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
</flow_graph>
